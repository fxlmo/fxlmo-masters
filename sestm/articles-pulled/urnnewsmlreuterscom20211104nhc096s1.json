{"date": "2021-11-04 02:16:44.904000+00:00", "ticker": "AMZN", "mrkt_info": {"open": 3312.75, "close": 3477.0}, "html": "<div class=\"storyContent\" lang=\"en\"><style type=\"text/css\">.storyContent * {border-color:inherit !important;outline-color:inherit !important;}</style><div class=\"tr-npp-lead\"><p>Amazon Web Services, Inc. (AWS), an Amazon.com, Inc. company, announced the general availability of Babelfish for Amazon Aurora PostgreSQL-Compatible Edition, a new capability that allows customers to run applications written for Microsoft SQL Server directly on Amazon Aurora with little to no code changes. Babelfish for Aurora PostgreSQL enables Amazon Aurora to understand commands from applications written for Microsoft SQL Server, making it easier for customers to migrate to Amazon Aurora. With Babelfish for Aurora PostgreSQL, customers simply migrate their data and configure their application to point to Amazon Aurora, reducing costs and simplifying operations by removing the dependency on Microsoft SQL Server. Also announced today, open-source Babelfish for PostgreSQL makes the same Microsoft SQL Server language capability in Babelfish for Aurora PostgreSQL available to any organization interested in running PostgreSQL, and the source code for Babelfish for PostgreSQL is available on GitHub under the permissive Apache 2.0 and PostgreSQL licenses for anyone who wants to extend it or use it for any purpose under the terms of the license. To get started with Babelfish for Aurora PostgreSQL, visit aws.amazon.com/rds/aurora/babelfish.</p><p>Constrained by commercial-grade database options that don?t offer the flexibility and database freedom of modern offerings, customers have long been unhappy with old-guard database providers. Commercial-grade databases offer high performance but are expensive, proprietary, and have high lock-in and punitive licensing terms that arbitrarily change. Many customers have moved to open-source database engines like PostgreSQL and MySQL because they want the performance of commercial-grade databases with the pricing and flexibility open-source engines provide. However, configuring open-source database engines to achieve high performance is time consuming and labor intensive. That?s why today more than 100,000 customers choose to run their database workloads on Amazon Aurora, a fully managed MySQL and PostgreSQL-compatible database that delivers the performance and availability of the highest-grade commercial databases at one tenth the cost. Today, customers use AWS Database Migration Service (AWS DMS) to migrate databases to the cloud and take advantage of high-performance open-source engines. However, once the initial database migration is complete, customers still need to migrate their application logic to run on PostgreSQL. Migrating application logic requires manual coding, is time consuming, and is often tied to proprietary database commands. Customers interested in adopting PostgreSQL and enjoying the benefits of running an open-source database engine on AWS want an easier way to migrate their Microsoft SQL Server applications to Amazon Aurora.</p></div><div class=\"tr-npp-body\"><p>Babelfish for Aurora PostgreSQL is a new capability that makes it possible to run Microsoft SQL Server applications directly on Amazon Aurora with little to no code changes. Babelfish for Aurora PostgreSQL provides a new capability for Amazon Aurora that enables Amazon Aurora to understand commands from applications written for Microsoft SQL Server. With Babelfish for Aurora PostgreSQL, Amazon Aurora PostgreSQL now understands T-SQL, Microsoft SQL Server?s proprietary SQL dialect, and supports the same SQL syntax as Microsoft SQL Server, so customers no longer need to rewrite their applications? database requests. Babelfish for Aurora PostgreSQL also understands TDS, Microsoft SQL Server?s network protocol, so customers can continue to use the existing Microsoft SQL Server database drivers that their applications rely on. As a result, customers can more easily move applications running on Microsoft SQL Server to Amazon Aurora, leading to faster, lower-risk, and more cost-effective database migrations. After customers migrate their data using AWS DMS, they simply update their application configuration to point to Amazon Aurora and start testing their application running on Amazon Aurora instead of Microsoft SQL Server. Once customers test their application, they can put it in production, no longer need Microsoft SQL Server, and can stop paying for the expensive, constrained licenses. Because Babelfish for Aurora PostgreSQL supports both Microsoft SQL Server and PostgreSQL, customers can migrate at their own speed and run their legacy Microsoft SQL Server code side by side with new functionality they build using PostgreSQL application programming interfaces (APIs).</p><p>?More and more customers have told us they want a fast, inexpensive, and low-risk way to break free from old-guard database vendors and their punitive licensing terms, high costs, and lack of innovation,? said Raju Gulabani, VP of Databases and Analytics at AWS. ?Now, with Babelfish for Aurora PostgreSQL, anyone can quickly, easily, and cost effectively migrate their applications to Amazon Aurora, giving customers the best of both worlds?the performance and availability of the highest-grade commercial databases at a cost more commonly associated with open source.?</p><p>In addition to the Amazon Aurora offering, the source code for Babelfish for Aurora PostgreSQL is now available on GitHub under the permissive Apache 2.0 and PostgreSQL licenses for anyone to view. Organizations can use it for any purpose including distributing it, modifying it, and distributing modified versions of it under the terms of the licenses. In addition to the source code being available on GitHub, all Babelfish for PostgreSQL development is done openly on GitHub, so organizations can see what new features are being developed.</p></div><p class=\"line-break\"><br/></p><p class=\"tr-copyright\">Copyright (c) 2021 Euclid Infotech Pvt Ltd.</p></div>"}